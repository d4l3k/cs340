function [nom]=decisionTreeInfoGain(nomnom,nomnomnom,nomnomnomnom);[nomnomnomnomnom,nomnomnomnomnomnom] = size(nomnom);nomnomnomnomnomnom = decisionStumpInfoGain(nomnom,nomnomnom);if nomnomnomnom <= 1 || isempty(nomnomnomnomnomnom.splitVariable);nom = nomnomnomnomnomnom;else;nomnomnomnomnomnomnom = nomnomnomnomnomnom.splitVariable;nomnomnomnomnomnomnomnom = nomnomnomnomnomnom.splitValue;nom.splitModel = nomnomnomnomnomnom;nomnomnomnomnomnomnomnomnom = find(nomnom(:,nomnomnomnomnomnomnom)>nomnomnomnomnomnomnomnom);nomnomnomnomnomnomnomnomnomnom = find(nomnom(:,nomnomnomnomnomnomnom)<=nomnomnomnomnomnomnomnom);nom.subModel1 = decisionTreeInfoGain(nomnom(nomnomnomnomnomnomnomnomnom,:),nomnomnom(nomnomnomnomnomnomnomnomnom),nomnomnomnom-1);nom.subModel0 = decisionTreeInfoGain(nomnom(nomnomnomnomnomnomnomnomnomnom,:),nomnomnom(nomnomnomnomnomnomnomnomnomnom),nomnomnomnom-1);nom.predict = @om;end;end
function [omnom] = om(omnomnom,omnomnomnom);[omnomnomnomnom,omnomnomnomnomnom] = size(omnomnomnom);omnom = zeros(omnomnomnomnom,1);omnomnomnomnomnom = omnomnom.splitModel;if isempty(omnomnomnomnomnom.splitVariable);omnom = omnomnomnomnomnom.splitSat*ones(T,1);else omnomnomnomnomnomnom = omnomnomnomnomnom.splitVariable;omnomnomnomnomnomnomnom = omnomnomnomnomnom.splitValue;omnomnomnomnomnomnomnomnom = find(omnomnomnom(:,omnomnomnomnomnomnom)>omnomnomnomnomnomnomnom);omnomnomnomnomnomnomnomnomnom = find(omnomnomnom(:,omnomnomnomnomnomnom)<=omnomnomnomnomnomnomnom);omnomnomnomnomnomnomnomnomnomnom = omnomnom.subModel1;omnomnomnomnomnomnomnomnomnomnomnom = omnomnom.subModel0;omnom(omnomnomnomnomnomnomnomnom) = omnomnomnomnomnomnomnomnomnomnom.predict(omnomnomnomnomnomnomnomnomnomnom,omnomnomnom(omnomnomnomnomnomnomnomnom,:));omnom(omnomnomnomnomnomnomnomnomnom) = omnomnomnomnomnomnomnomnomnomnomnom.predict(omnomnomnomnomnomnomnomnomnomnomnom,omnomnomnom(omnomnomnomnomnomnomnomnomnom,:));end;end